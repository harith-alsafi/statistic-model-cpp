<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classregr_1_1PolyRegression" kind="class" language="C++" prot="public">
    <compoundname>regr::PolyRegression</compoundname>
    <basecompoundref refid="classregr_1_1LinearRegression" prot="public" virt="non-virtual">regr::LinearRegression</basecompoundref>
    <includes refid="regr_8hpp" local="yes">regr.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classregr_1_1PolyRegression_1a8bddad858a0f6b59bd459cb6fa7d84be" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; regr::PolyRegression::coeff</definition>
        <argsstring></argsstring>
        <name>coeff</name>
        <briefdescription>
<para>Stores coefficients of polynomial. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="280" column="25" bodyfile="include/regr.hpp" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classregr_1_1PolyRegression_1a1c63523cea2d40ca3505509ce557062c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int regr::PolyRegression::degree</definition>
        <argsstring></argsstring>
        <name>degree</name>
        <briefdescription>
<para>Degree of polynomial. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="286" column="17" bodyfile="include/regr.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a08293f8251aba51d2c6f3425e5157e63" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>long double</type>
        <definition>long double regr::PolyRegression::fun</definition>
        <argsstring>(long double xx)</argsstring>
        <name>fun</name>
        <reimplements refid="classregr_1_1LinearRegression_1a54deda798bb827b04338f02734e17b7f">fun</reimplements>
        <param>
          <type>long double</type>
          <declname>xx</declname>
        </param>
        <briefdescription>
<para>overloads the regression function from LinearRegression </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>long double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="294" column="25" bodyfile="include/regr.hpp" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a94f0880a9a098f4a33392a4d2765eaa4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string regr::PolyRegression::get_power</definition>
        <argsstring>(int i)</argsstring>
        <name>get_power</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the power as string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="308" column="25" bodyfile="include/regr.hpp" bodystart="308" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1af35f2ea523bbdcc9f820a4a78df175ec" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double regr::LinearRegression::get_y_intersept</definition>
        <argsstring>()</argsstring>
        <name>get_y_intersept</name>
        <briefdescription>
<para>So that we cant acess these methods when using this class. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="272" column="13" bodyfile="include/regr.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a1088c5502e2cfc7997423c046bf01d8f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double regr::LinearRegression::get_slope</definition>
        <argsstring>()</argsstring>
        <name>get_slope</name>
        <briefdescription>
<para>Get the slope object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>long double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="273" column="13" bodyfile="include/regr.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classregr_1_1PolyRegression_1afc0775e307755fa0f1b64c59dbc97245" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>regr::PolyRegression::PolyRegression</definition>
        <argsstring>()</argsstring>
        <name>PolyRegression</name>
        <briefdescription>
<para>Construct a new Poly Regression object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="334" column="13" bodyfile="include/regr.hpp" bodystart="334" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a349fb1f73a2128ed128aab156c7d7ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>regr::PolyRegression::~PolyRegression</definition>
        <argsstring>()</argsstring>
        <name>~PolyRegression</name>
        <briefdescription>
<para>Destroy the Poly Regression object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="340" column="13" bodyfile="include/regr.hpp" bodystart="340" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a6333d5db93fe8526d3907343d7e46e20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void regr::PolyRegression::set_degree</definition>
        <argsstring>(int deg=2)</argsstring>
        <name>set_degree</name>
        <param>
          <type>int</type>
          <declname>deg</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
<para>Set the degree. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>deg</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="347" column="18" bodyfile="include/regr.hpp" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a03689acc8b399c9760b277bfa95b610f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void regr::PolyRegression::show_equation</definition>
        <argsstring>()</argsstring>
        <name>show_equation</name>
        <reimplements refid="classregr_1_1LinearRegression_1a7550e154140c7d8d16afc1458a4171b5">show_equation</reimplements>
        <briefdescription>
<para>Overloads show_equation from LinearRegression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="355" column="18" bodyfile="include/regr.hpp" bodystart="355" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classregr_1_1PolyRegression_1a8c30c057967c27d0fb86c3c28d77dec9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void regr::PolyRegression::fit_data</definition>
        <argsstring>()</argsstring>
        <name>fit_data</name>
        <reimplements refid="classregr_1_1LinearRegression_1adcc20a41b2f80db68e21f169262a3d8a">fit_data</reimplements>
        <briefdescription>
<para>Overloads the fit_data from LinearRegression. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/regr.hpp" line="378" column="18" bodyfile="include/regr.hpp" bodystart="378" bodyend="481"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for polynomial regression. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>regr::LinearRegression</label>
        <link refid="classregr_1_1LinearRegression"/>
      </node>
      <node id="1">
        <label>regr::PolyRegression</label>
        <link refid="classregr_1_1PolyRegression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>graphoptions</label>
        <link refid="structgraphoptions"/>
      </node>
      <node id="3">
        <label>misc::Plot</label>
        <link refid="classmisc_1_1Plot"/>
        <childnode refid="4" relation="usage">
          <edgelabel>-aoptions</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>-title</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>regr::LinearRegression</label>
        <link refid="classregr_1_1LinearRegression"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-p</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>regr::PolyRegression</label>
        <link refid="classregr_1_1PolyRegression"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="5">
        <label>std::string</label>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/regr.hpp" line="265" column="5" bodyfile="include/regr.hpp" bodystart="266" bodyend="482"/>
    <listofallmembers>
      <member refid="classregr_1_1LinearRegression_1aa685ec626a5a2fcd37ab42375ac2dbde" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>c</name></member>
      <member refid="classregr_1_1PolyRegression_1a8bddad858a0f6b59bd459cb6fa7d84be" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>coeff</name></member>
      <member refid="classregr_1_1PolyRegression_1a1c63523cea2d40ca3505509ce557062c" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>degree</name></member>
      <member refid="classregr_1_1PolyRegression_1a8c30c057967c27d0fb86c3c28d77dec9" prot="public" virt="virtual"><scope>regr::PolyRegression</scope><name>fit_data</name></member>
      <member refid="classregr_1_1PolyRegression_1a08293f8251aba51d2c6f3425e5157e63" prot="private" virt="virtual"><scope>regr::PolyRegression</scope><name>fun</name></member>
      <member refid="classregr_1_1LinearRegression_1a2c2066e9dbd92a01a1426ee72d357f88" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_data</name></member>
      <member refid="classregr_1_1LinearRegression_1a06c777ad76e48b829906937b962f56bf" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_fit_data</name></member>
      <member refid="classregr_1_1LinearRegression_1a99e5f6f8cbde93b005728cc05d55a3ef" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_fitted_r</name></member>
      <member refid="classregr_1_1LinearRegression_1a172f6f7583a1703f71fb831bd74af95c" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_original_r</name></member>
      <member refid="classregr_1_1PolyRegression_1a94f0880a9a098f4a33392a4d2765eaa4" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_power</name></member>
      <member refid="classregr_1_1PolyRegression_1a1088c5502e2cfc7997423c046bf01d8f" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_slope</name></member>
      <member refid="classregr_1_1PolyRegression_1af35f2ea523bbdcc9f820a4a78df175ec" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>get_y_intersept</name></member>
      <member refid="classregr_1_1LinearRegression_1aa80d196a8a446d9444ab7217bb1eb102" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>LinearRegression</name></member>
      <member refid="classregr_1_1LinearRegression_1a3dcb948847da6de38e83105577b77e25" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>load_data</name></member>
      <member refid="classregr_1_1LinearRegression_1a691f55a1966c8ee3fccfe5b0d0830164" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>m</name></member>
      <member refid="classregr_1_1LinearRegression_1a53294f76033f6bd16ae3f80061cc960b" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>n</name></member>
      <member refid="classregr_1_1LinearRegression_1afce244541db45ad270d2e623bfd762bc" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>p</name></member>
      <member refid="classregr_1_1LinearRegression_1a42d8b4eba987c0cf243aa36f0a3c1c4b" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>plot_data</name></member>
      <member refid="classregr_1_1LinearRegression_1abc4fcce72b8749b7a616c6096a78bbc7" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>plot_equation</name></member>
      <member refid="classregr_1_1PolyRegression_1afc0775e307755fa0f1b64c59dbc97245" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>PolyRegression</name></member>
      <member refid="classregr_1_1PolyRegression_1a6333d5db93fe8526d3907343d7e46e20" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>set_degree</name></member>
      <member refid="classregr_1_1PolyRegression_1a03689acc8b399c9760b277bfa95b610f" prot="public" virt="virtual"><scope>regr::PolyRegression</scope><name>show_equation</name></member>
      <member refid="classregr_1_1LinearRegression_1abd7eab80727c7419b6be007f0fe15546" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>sumx</name></member>
      <member refid="classregr_1_1LinearRegression_1a2a3df8724439e5029f8e9679fda55c58" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>sumxx</name></member>
      <member refid="classregr_1_1LinearRegression_1a6e3b21917833e9d88d8c9a28dad34524" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>sumxy</name></member>
      <member refid="classregr_1_1LinearRegression_1a58835f34ed83ca222fe7e77ab1c354c9" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>sumy</name></member>
      <member refid="classregr_1_1LinearRegression_1a2ab986584cf1e65f73067befbbf31f20" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>x</name></member>
      <member refid="classregr_1_1LinearRegression_1a15da637fcac71de15546d67adeadb174" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>y</name></member>
      <member refid="classregr_1_1LinearRegression_1a1a1127b7fa4cdefefccb7ebad58fcf1a" prot="private" virt="non-virtual"><scope>regr::PolyRegression</scope><name>yfit</name></member>
      <member refid="classregr_1_1LinearRegression_1a4a2a708a797e3066411b9ff9601394e2" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>~LinearRegression</name></member>
      <member refid="classregr_1_1PolyRegression_1a349fb1f73a2128ed128aab156c7d7ce8" prot="public" virt="non-virtual"><scope>regr::PolyRegression</scope><name>~PolyRegression</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
