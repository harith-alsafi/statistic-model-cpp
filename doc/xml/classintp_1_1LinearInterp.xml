<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="classintp_1_1LinearInterp" kind="class" language="C++" prot="public">
    <compoundname>intp::LinearInterp</compoundname>
    <derivedcompoundref refid="classintp_1_1PolyInterp" prot="public" virt="non-virtual">intp::PolyInterp</derivedcompoundref>
    <includes refid="intp_8hpp" local="yes">intp.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; intp::LinearInterp::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
<para>x-values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="30" column="25" bodyfile="include/intp.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; intp::LinearInterp::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
<para>y-values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="36" column="25" bodyfile="include/intp.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; intp::LinearInterp::x_in</definition>
        <argsstring></argsstring>
        <name>x_in</name>
        <briefdescription>
<para>x-values used for interpolation only </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="42" column="25" bodyfile="include/intp.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; intp::LinearInterp::y_in</definition>
        <argsstring></argsstring>
        <name>y_in</name>
        <briefdescription>
<para>Interpolated y-values only. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="48" column="25" bodyfile="include/intp.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; intp::LinearInterp::x_comb</definition>
        <argsstring></argsstring>
        <name>x_comb</name>
        <briefdescription>
<para>Original and interpolated x&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="54" column="25" bodyfile="include/intp.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" prot="private" static="no" mutable="no">
        <type>std::vector&lt; long double &gt;</type>
        <definition>std::vector&lt;long double&gt; intp::LinearInterp::y_comb</definition>
        <argsstring></argsstring>
        <name>y_comb</name>
        <briefdescription>
<para>Original and interpolated y&apos;s. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="60" column="25" bodyfile="include/intp.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int intp::LinearInterp::n</definition>
        <argsstring></argsstring>
        <name>n</name>
        <briefdescription>
<para>Size of x. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="66" column="17" bodyfile="include/intp.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" prot="private" static="no" mutable="no">
        <type><ref refid="classmisc_1_1Plot" kindref="compound">misc::Plot</ref></type>
        <definition>misc::Plot intp::LinearInterp::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
<para>Plot object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="72" column="24" bodyfile="include/intp.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classintp_1_1LinearInterp_1a95a52a22e82f0de918e04105356d6317" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class PolyInterp</definition>
        <argsstring></argsstring>
        <name>PolyInterp</name>
        <param>
          <type><ref refid="classintp_1_1PolyInterp" kindref="compound">PolyInterp</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="325" column="26" bodyfile="include/intp.hpp" bodystart="325" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a1bfbc01f2d393ea8ece07c281888a00b" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>long double</type>
        <definition>virtual long double intp::LinearInterp::_find_value</definition>
        <argsstring>(long double xx, std::vector&lt; long double &gt; _x, std::vector&lt; long double &gt; _y)</argsstring>
        <name>_find_value</name>
        <reimplementedby refid="classintp_1_1PolyInterp_1af2bbf7080242e2915109db16ec845b87">_find_value</reimplementedby>
        <param>
          <type>long double</type>
          <declname>xx</declname>
        </param>
        <param>
          <type>std::vector&lt; long double &gt;</type>
          <declname>_x</declname>
        </param>
        <param>
          <type>std::vector&lt; long double &gt;</type>
          <declname>_y</declname>
        </param>
        <briefdescription>
<para>Gives an interpolated value for a given x-value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_y</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>long </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="82" column="33" bodyfile="include/intp.hpp" bodystart="82" bodyend="124"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classintp_1_1LinearInterp_1ab47c88b454ae9e5680d7e25895c0db57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>intp::LinearInterp::LinearInterp</definition>
        <argsstring>()</argsstring>
        <name>LinearInterp</name>
        <briefdescription>
<para>Construct a new Linear Interp object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="131" column="13" bodyfile="include/intp.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a16bc0a0f005f2b57af8c3cff45d80b8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>intp::LinearInterp::~LinearInterp</definition>
        <argsstring>()</argsstring>
        <name>~LinearInterp</name>
        <briefdescription>
<para>Destroy the Linear Interp object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="137" column="13" bodyfile="include/intp.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a1ee7f275fca970ba5ed822689f772ed6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void intp::LinearInterp::load_data</definition>
        <argsstring>(std::vector&lt; long double &gt; xx, std::vector&lt; long double &gt; yy)</argsstring>
        <name>load_data</name>
        <reimplementedby refid="classintp_1_1PolyInterp_1af7f4fb4af5ff903947fbcc932490646e">load_data</reimplementedby>
        <param>
          <type>std::vector&lt; long double &gt;</type>
          <declname>xx</declname>
        </param>
        <param>
          <type>std::vector&lt; long double &gt;</type>
          <declname>yy</declname>
        </param>
        <briefdescription>
<para>Loads the data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yy</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="145" column="26" bodyfile="include/intp.hpp" bodystart="145" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a19a36bb67d8a42be7d15d04648229208" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double intp::LinearInterp::find_value</definition>
        <argsstring>(long double xx, bool use_combined=false)</argsstring>
        <name>find_value</name>
        <param>
          <type>long double</type>
          <declname>xx</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>use_combined</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Finds the interpolated value from given x. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xx</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>use_combined</parametername>
</parameternamelist>
<parameterdescription>
<para>// can use previously interpolated data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>long double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="179" column="25" bodyfile="include/intp.hpp" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a586931cc4470450bfcf1215f7e3daa2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void intp::LinearInterp::reset_interpolated</definition>
        <argsstring>()</argsstring>
        <name>reset_interpolated</name>
        <briefdescription>
<para>Resets the interpolated data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="190" column="18" bodyfile="include/intp.hpp" bodystart="190" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a905b1a16a9718f3c87f47d4f6c87eb93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void intp::LinearInterp::plot_all_interpolation</definition>
        <argsstring>(int nn=500)</argsstring>
        <name>plot_all_interpolation</name>
        <param>
          <type>int</type>
          <declname>nn</declname>
          <defval>500</defval>
        </param>
        <briefdescription>
<para>Plots all posiible interpolations within given number of points. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nn</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="202" column="18" bodyfile="include/intp.hpp" bodystart="202" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a2ce5eafccbdfd1a92cec39694a5601ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void intp::LinearInterp::plot_data</definition>
        <argsstring>()</argsstring>
        <name>plot_data</name>
        <briefdescription>
<para>Plots the original data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="217" column="18" bodyfile="include/intp.hpp" bodystart="217" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1af0af99e177d8c2c9bd345546ffe96a85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void intp::LinearInterp::plot_interpolated_data</definition>
        <argsstring>()</argsstring>
        <name>plot_interpolated_data</name>
        <briefdescription>
<para>Plots the interpolated data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="235" column="18" bodyfile="include/intp.hpp" bodystart="235" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a2e77ad32addfd39d1f81e198ed90b58c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void intp::LinearInterp::plot_combined_data</definition>
        <argsstring>()</argsstring>
        <name>plot_combined_data</name>
        <briefdescription>
<para>Plots x_comb and y_comb. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="255" column="18" bodyfile="include/intp.hpp" bodystart="255" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a0c2c830a638153841382d819f4bc1e73" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref></type>
        <definition>misc::Table intp::LinearInterp::get_original_data</definition>
        <argsstring>()</argsstring>
        <name>get_original_data</name>
        <briefdescription>
<para>Get the original data object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>misc::Table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="275" column="25" bodyfile="include/intp.hpp" bodystart="275" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a34f189c555a7c5d8a2900a2f314ddd59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref></type>
        <definition>misc::Table intp::LinearInterp::get_interpolated_data</definition>
        <argsstring>()</argsstring>
        <name>get_interpolated_data</name>
        <briefdescription>
<para>Get the interpolated data object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>misc::Table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="287" column="25" bodyfile="include/intp.hpp" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a312024163ea8f6d9bdc20d37902b9fed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref></type>
        <definition>misc::Table intp::LinearInterp::get_combined_data</definition>
        <argsstring>()</argsstring>
        <name>get_combined_data</name>
        <briefdescription>
<para>Get the combined data object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>misc::Table </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="299" column="25" bodyfile="include/intp.hpp" bodystart="299" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a33c4b83f8be6b8c68079dde8068fc86f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double intp::LinearInterp::get_r_original_data</definition>
        <argsstring>()</argsstring>
        <name>get_r_original_data</name>
        <briefdescription>
<para>Get the r original data object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>long double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="311" column="25" bodyfile="include/intp.hpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classintp_1_1LinearInterp_1a5596a0d46568cb0256b4cea36e19d5dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long double</type>
        <definition>long double intp::LinearInterp::get_r_combined_data</definition>
        <argsstring>()</argsstring>
        <name>get_r_combined_data</name>
        <briefdescription>
<para>Get the r combined data object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>long double </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/intp.hpp" line="320" column="25" bodyfile="include/intp.hpp" bodystart="320" bodyend="322"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class for Linear interpolation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>intp::LinearInterp</label>
        <link refid="classintp_1_1LinearInterp"/>
      </node>
      <node id="2">
        <label>intp::PolyInterp</label>
        <link refid="classintp_1_1PolyInterp"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>graphoptions</label>
        <link refid="structgraphoptions"/>
      </node>
      <node id="1">
        <label>intp::LinearInterp</label>
        <link refid="classintp_1_1LinearInterp"/>
        <childnode refid="2" relation="usage">
          <edgelabel>-p</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>misc::Plot</label>
        <link refid="classmisc_1_1Plot"/>
        <childnode refid="3" relation="usage">
          <edgelabel>-aoptions</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>-title</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="4">
        <label>std::string</label>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/intp.hpp" line="23" column="5" bodyfile="include/intp.hpp" bodystart="24" bodyend="326"/>
    <listofallmembers>
      <member refid="classintp_1_1LinearInterp_1a1bfbc01f2d393ea8ece07c281888a00b" prot="private" virt="virtual"><scope>intp::LinearInterp</scope><name>_find_value</name></member>
      <member refid="classintp_1_1LinearInterp_1a19a36bb67d8a42be7d15d04648229208" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>find_value</name></member>
      <member refid="classintp_1_1LinearInterp_1a312024163ea8f6d9bdc20d37902b9fed" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>get_combined_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a34f189c555a7c5d8a2900a2f314ddd59" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>get_interpolated_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a0c2c830a638153841382d819f4bc1e73" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>get_original_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a5596a0d46568cb0256b4cea36e19d5dd" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>get_r_combined_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a33c4b83f8be6b8c68079dde8068fc86f" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>get_r_original_data</name></member>
      <member refid="classintp_1_1LinearInterp_1ab47c88b454ae9e5680d7e25895c0db57" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>LinearInterp</name></member>
      <member refid="classintp_1_1LinearInterp_1a1ee7f275fca970ba5ed822689f772ed6" prot="public" virt="virtual"><scope>intp::LinearInterp</scope><name>load_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>n</name></member>
      <member refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>p</name></member>
      <member refid="classintp_1_1LinearInterp_1a905b1a16a9718f3c87f47d4f6c87eb93" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>plot_all_interpolation</name></member>
      <member refid="classintp_1_1LinearInterp_1a2e77ad32addfd39d1f81e198ed90b58c" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>plot_combined_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a2ce5eafccbdfd1a92cec39694a5601ee" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>plot_data</name></member>
      <member refid="classintp_1_1LinearInterp_1af0af99e177d8c2c9bd345546ffe96a85" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>plot_interpolated_data</name></member>
      <member refid="classintp_1_1LinearInterp_1a95a52a22e82f0de918e04105356d6317" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>PolyInterp</name></member>
      <member refid="classintp_1_1LinearInterp_1a586931cc4470450bfcf1215f7e3daa2c" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>reset_interpolated</name></member>
      <member refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>x</name></member>
      <member refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>x_comb</name></member>
      <member refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>x_in</name></member>
      <member refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>y</name></member>
      <member refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>y_comb</name></member>
      <member refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" prot="private" virt="non-virtual"><scope>intp::LinearInterp</scope><name>y_in</name></member>
      <member refid="classintp_1_1LinearInterp_1a16bc0a0f005f2b57af8c3cff45d80b8f" prot="public" virt="non-virtual"><scope>intp::LinearInterp</scope><name>~LinearInterp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
