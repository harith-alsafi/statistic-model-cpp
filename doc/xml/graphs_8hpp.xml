<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="graphs_8hpp" kind="file" language="C++">
    <compoundname>graphs.hpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">sstream</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cmath</includes>
    <includes local="no">limits</includes>
    <includes local="no">cfloat</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">cwchar</includes>
    <includes local="no">clocale</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">unistd.h</includes>
    <includedby refid="misc_8hpp" local="yes">include/misc.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/graphs.hpp</label>
        <link refid="graphs_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>cfloat</label>
      </node>
      <node id="10">
        <label>clocale</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="11">
        <label>cstdlib</label>
      </node>
      <node id="4">
        <label>cstring</label>
      </node>
      <node id="9">
        <label>cwchar</label>
      </node>
      <node id="8">
        <label>iomanip</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>limits</label>
      </node>
      <node id="3">
        <label>sstream</label>
      </node>
      <node id="12">
        <label>sys/ioctl.h</label>
      </node>
      <node id="13">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/graphs.hpp</label>
        <link refid="graphs_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>include/intp.hpp</label>
        <link refid="intp_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/menu.hpp</label>
        <link refid="menu_8hpp"/>
      </node>
      <node id="2">
        <label>include/misc.hpp</label>
        <link refid="misc_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>include/regr.hpp</label>
        <link refid="regr_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structgraphoptions" prot="public">graphoptions</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const styles[][11]</definition>
        <argsstring>[][11]</argsstring>
        <name>styles</name>
        <initializer>= {
	{&quot;-&quot;, &quot;|&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;}, 
	{&quot;—&quot;, &quot;|&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;}, 
	{&quot;─&quot;, &quot;│&quot;, &quot;┌&quot;, &quot;┬&quot;, &quot;┐&quot;, &quot;├&quot;, &quot;┼&quot;, &quot;┤&quot;, &quot;└&quot;, &quot;┴&quot;, &quot;┘&quot;}, 
	{&quot;━&quot;, &quot;┃&quot;, &quot;┏&quot;, &quot;┳&quot;, &quot;┓&quot;, &quot;┣&quot;, &quot;╋&quot;, &quot;┫&quot;, &quot;┗&quot;, &quot;┻&quot;, &quot;┛&quot;}, 
	{&quot;═&quot;, &quot;║&quot;, &quot;╔&quot;, &quot;╦&quot;, &quot;╗&quot;, &quot;╠&quot;, &quot;╬&quot;, &quot;╣&quot;, &quot;╚&quot;, &quot;╩&quot;, &quot;╝&quot;}, 
	{&quot;╌&quot;, &quot;╎&quot;, &quot;┌&quot;, &quot;┬&quot;, &quot;┐&quot;, &quot;├&quot;, &quot;┼&quot;, &quot;┤&quot;, &quot;└&quot;, &quot;┴&quot;, &quot;┘&quot;}, 
	{&quot;╍&quot;, &quot;╏&quot;, &quot;┏&quot;, &quot;┳&quot;, &quot;┓&quot;, &quot;┣&quot;, &quot;╋&quot;, &quot;┫&quot;, &quot;┗&quot;, &quot;┻&quot;, &quot;┛&quot;}	 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="19" column="18" bodyfile="include/graphs.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const colors[]</definition>
        <argsstring>[]</argsstring>
        <name>colors</name>
        <initializer>= {&quot;\e[39m&quot;, &quot;\e[30m&quot;, &quot;\e[31m&quot;, &quot;\e[32m&quot;, &quot;\e[33m&quot;, &quot;\e[34m&quot;, &quot;\e[35m&quot;, &quot;\e[36m&quot;, &quot;\e[37m&quot;, &quot;\e[90m&quot;, &quot;\e[91m&quot;, &quot;\e[92m&quot;, &quot;\e[93m&quot;, &quot;\e[94m&quot;, &quot;\e[95m&quot;, &quot;\e[96m&quot;, &quot;\e[97m&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="30" column="18" bodyfile="include/graphs.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graphs_8hpp_1a6a1a2273d67802663aa06d5c6213bbc3" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const dots[]</definition>
        <argsstring>[]</argsstring>
        <name>dots</name>
        <initializer>= {&quot;⠀&quot;, &quot;⠁&quot;, &quot;⠂&quot;, &quot;⠃&quot;, &quot;⠄&quot;, &quot;⠅&quot;, &quot;⠆&quot;, &quot;⠇&quot;, &quot;⠈&quot;, &quot;⠉&quot;, &quot;⠊&quot;, &quot;⠋&quot;, &quot;⠌&quot;, &quot;⠍&quot;, &quot;⠎&quot;, &quot;⠏&quot;, &quot;⠐&quot;, &quot;⠑&quot;, &quot;⠒&quot;, &quot;⠓&quot;, &quot;⠔&quot;, &quot;⠕&quot;, &quot;⠖&quot;, &quot;⠗&quot;, &quot;⠘&quot;, &quot;⠙&quot;, &quot;⠚&quot;, &quot;⠛&quot;, &quot;⠜&quot;, &quot;⠝&quot;, &quot;⠞&quot;, &quot;⠟&quot;, &quot;⠠&quot;, &quot;⠡&quot;, &quot;⠢&quot;, &quot;⠣&quot;, &quot;⠤&quot;, &quot;⠥&quot;, &quot;⠦&quot;, &quot;⠧&quot;, &quot;⠨&quot;, &quot;⠩&quot;, &quot;⠪&quot;, &quot;⠫&quot;, &quot;⠬&quot;, &quot;⠭&quot;, &quot;⠮&quot;, &quot;⠯&quot;, &quot;⠰&quot;, &quot;⠱&quot;, &quot;⠲&quot;, &quot;⠳&quot;, &quot;⠴&quot;, &quot;⠵&quot;, &quot;⠶&quot;, &quot;⠷&quot;, &quot;⠸&quot;, &quot;⠹&quot;, &quot;⠺&quot;, &quot;⠻&quot;, &quot;⠼&quot;, &quot;⠽&quot;, &quot;⠾&quot;, &quot;⠿&quot;, &quot;⡀&quot;, &quot;⡁&quot;, &quot;⡂&quot;, &quot;⡃&quot;, &quot;⡄&quot;, &quot;⡅&quot;, &quot;⡆&quot;, &quot;⡇&quot;, &quot;⡈&quot;, &quot;⡉&quot;, &quot;⡊&quot;, &quot;⡋&quot;, &quot;⡌&quot;, &quot;⡍&quot;, &quot;⡎&quot;, &quot;⡏&quot;, &quot;⡐&quot;, &quot;⡑&quot;, &quot;⡒&quot;, &quot;⡓&quot;, &quot;⡔&quot;, &quot;⡕&quot;, &quot;⡖&quot;, &quot;⡗&quot;, &quot;⡘&quot;, &quot;⡙&quot;, &quot;⡚&quot;, &quot;⡛&quot;, &quot;⡜&quot;, &quot;⡝&quot;, &quot;⡞&quot;, &quot;⡟&quot;, &quot;⡠&quot;, &quot;⡡&quot;, &quot;⡢&quot;, &quot;⡣&quot;, &quot;⡤&quot;, &quot;⡥&quot;, &quot;⡦&quot;, &quot;⡧&quot;, &quot;⡨&quot;, &quot;⡩&quot;, &quot;⡪&quot;, &quot;⡫&quot;, &quot;⡬&quot;, &quot;⡭&quot;, &quot;⡮&quot;, &quot;⡯&quot;, &quot;⡰&quot;, &quot;⡱&quot;, &quot;⡲&quot;, &quot;⡳&quot;, &quot;⡴&quot;, &quot;⡵&quot;, &quot;⡶&quot;, &quot;⡷&quot;, &quot;⡸&quot;, &quot;⡹&quot;, &quot;⡺&quot;, &quot;⡻&quot;, &quot;⡼&quot;, &quot;⡽&quot;, &quot;⡾&quot;, &quot;⡿&quot;, &quot;⢀&quot;, &quot;⢁&quot;, &quot;⢂&quot;, &quot;⢃&quot;, &quot;⢄&quot;, &quot;⢅&quot;, &quot;⢆&quot;, &quot;⢇&quot;, &quot;⢈&quot;, &quot;⢉&quot;, &quot;⢊&quot;, &quot;⢋&quot;, &quot;⢌&quot;, &quot;⢍&quot;, &quot;⢎&quot;, &quot;⢏&quot;, &quot;⢐&quot;, &quot;⢑&quot;, &quot;⢒&quot;, &quot;⢓&quot;, &quot;⢔&quot;, &quot;⢕&quot;, &quot;⢖&quot;, &quot;⢗&quot;, &quot;⢘&quot;, &quot;⢙&quot;, &quot;⢚&quot;, &quot;⢛&quot;, &quot;⢜&quot;, &quot;⢝&quot;, &quot;⢞&quot;, &quot;⢟&quot;, &quot;⢠&quot;, &quot;⢡&quot;, &quot;⢢&quot;, &quot;⢣&quot;, &quot;⢤&quot;, &quot;⢥&quot;, &quot;⢦&quot;, &quot;⢧&quot;, &quot;⢨&quot;, &quot;⢩&quot;, &quot;⢪&quot;, &quot;⢫&quot;, &quot;⢬&quot;, &quot;⢭&quot;, &quot;⢮&quot;, &quot;⢯&quot;, &quot;⢰&quot;, &quot;⢱&quot;, &quot;⢲&quot;, &quot;⢳&quot;, &quot;⢴&quot;, &quot;⢵&quot;, &quot;⢶&quot;, &quot;⢷&quot;, &quot;⢸&quot;, &quot;⢹&quot;, &quot;⢺&quot;, &quot;⢻&quot;, &quot;⢼&quot;, &quot;⢽&quot;, &quot;⢾&quot;, &quot;⢿&quot;, &quot;⣀&quot;, &quot;⣁&quot;, &quot;⣂&quot;, &quot;⣃&quot;, &quot;⣄&quot;, &quot;⣅&quot;, &quot;⣆&quot;, &quot;⣇&quot;, &quot;⣈&quot;, &quot;⣉&quot;, &quot;⣊&quot;, &quot;⣋&quot;, &quot;⣌&quot;, &quot;⣍&quot;, &quot;⣎&quot;, &quot;⣏&quot;, &quot;⣐&quot;, &quot;⣑&quot;, &quot;⣒&quot;, &quot;⣓&quot;, &quot;⣔&quot;, &quot;⣕&quot;, &quot;⣖&quot;, &quot;⣗&quot;, &quot;⣘&quot;, &quot;⣙&quot;, &quot;⣚&quot;, &quot;⣛&quot;, &quot;⣜&quot;, &quot;⣝&quot;, &quot;⣞&quot;, &quot;⣟&quot;, &quot;⣠&quot;, &quot;⣡&quot;, &quot;⣢&quot;, &quot;⣣&quot;, &quot;⣤&quot;, &quot;⣥&quot;, &quot;⣦&quot;, &quot;⣧&quot;, &quot;⣨&quot;, &quot;⣩&quot;, &quot;⣪&quot;, &quot;⣫&quot;, &quot;⣬&quot;, &quot;⣭&quot;, &quot;⣮&quot;, &quot;⣯&quot;, &quot;⣰&quot;, &quot;⣱&quot;, &quot;⣲&quot;, &quot;⣳&quot;, &quot;⣴&quot;, &quot;⣵&quot;, &quot;⣶&quot;, &quot;⣷&quot;, &quot;⣸&quot;, &quot;⣹&quot;, &quot;⣺&quot;, &quot;⣻&quot;, &quot;⣼&quot;, &quot;⣽&quot;, &quot;⣾&quot;, &quot;⣿&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="32" column="18" bodyfile="include/graphs.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graphs_8hpp_1a524d16027eb5d4d9052f1634a15a863d" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int values[][4]</definition>
        <argsstring>[][4]</argsstring>
        <name>values</name>
        <initializer>= {{0x1, 0x2, 0x4, 0x40}, {0x8, 0x10, 0x20, 0x80}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="34" column="11" bodyfile="include/graphs.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graphs_8hpp_1a84a54be46d61d60c0e6a76ac79bae486" prot="public" static="no" mutable="no">
        <type>const char *const</type>
        <definition>const char* const fractions[]</definition>
        <argsstring>[]</argsstring>
        <name>fractions</name>
        <initializer>= {&quot;¼&quot;, &quot;½&quot;, &quot;¾&quot;, &quot;⅐&quot;, &quot;⅑&quot;, &quot;⅒&quot;, &quot;⅓&quot;, &quot;⅔&quot;, &quot;⅕&quot;, &quot;⅖&quot;, &quot;⅗&quot;, &quot;⅘&quot;, &quot;⅙&quot;, &quot;⅚&quot;, &quot;⅛&quot;, &quot;⅜&quot;, &quot;⅝&quot;, &quot;⅞&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="36" column="18" bodyfile="include/graphs.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graphs_8hpp_1a9bd47038e7a99a6f487cd7067247bd07" prot="public" static="no" mutable="no">
        <type>const long double</type>
        <definition>const long double fractionvalues[]</definition>
        <argsstring>[]</argsstring>
        <name>fractionvalues</name>
        <initializer>= {1.0L / 4.0L, 1.0L / 2.0L, 3.0L / 4.0L, 1.0L / 7.0L, 1.0L / 9.0L, 1.0L / 10.0L, 1.0L / 3.0L, 2.0L / 3.0L, 1.0L / 5.0L, 2.0L / 5.0L, 3.0L / 5.0L, 4.0L / 5.0L, 1.0L / 6.0L, 5.0L / 6.0L, 1.0L / 8.0L, 3.0L / 8.0L, 5.0L / 8.0L, 7.0L / 8.0L}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="38" column="19" bodyfile="include/graphs.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="graphs_8hpp_1a5c1a8e3cedb72ff9591ac596bd334f28" prot="public" static="no" mutable="no">
        <type>const <ref refid="structgraphoptions" kindref="compound">graphoptions</ref></type>
        <definition>const graphoptions graphdefaultoptions</definition>
        <argsstring></argsstring>
        <name>graphdefaultoptions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="66" column="20" bodyfile="include/graphs.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="graphs_8hpp_1a2c4e6a8e51fcb85e7bf2e4aaca3abdf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int strcol</definition>
        <argsstring>(const char *const str)</argsstring>
        <name>strcol</name>
        <param>
          <type>const char *const</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="70" column="5" bodyfile="include/graphs.hpp" bodystart="70" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="graphs_8hpp_1a7c93086728906d56f07a7320e866e9e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string wrap</definition>
        <argsstring>(const char *const str, const size_t line_length)</argsstring>
        <name>wrap</name>
        <param>
          <type>const char *const</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>line_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="115" column="8" bodyfile="include/graphs.hpp" bodystart="115" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="graphs_8hpp_1a78d4673ef4f8b08c0d58e9128abc0fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t outputlabel</definition>
        <argsstring>(const long double label, ostringstream &amp;strm)</argsstring>
        <name>outputlabel</name>
        <param>
          <type>const long double</type>
          <declname>label</declname>
        </param>
        <param>
          <type>ostringstream &amp;</type>
          <declname>strm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="166" column="8" bodyfile="include/graphs.hpp" bodystart="166" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int graph</definition>
        <argsstring>(const size_t height, const size_t width, const long double xmin, const long double xmax, const long double ymin, const long double ymax, unsigned short **array, const graphoptions &amp;aoptions)</argsstring>
        <name>graph</name>
        <param>
          <type>const size_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>xmin</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>xmax</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>ymin</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>ymax</declname>
        </param>
        <param>
          <type>unsigned short **</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphoptions" kindref="compound">graphoptions</ref> &amp;</type>
          <declname>aoptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="230" column="5" bodyfile="include/graphs.hpp" bodystart="230" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="graphs_8hpp_1a6cfeb94c998df81de0952aaf62003256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int graph</definition>
        <argsstring>(size_t height, size_t width, long double xmin, long double xmax, long double ymin, long double ymax, const size_t rows, T **array, const graphoptions &amp;aoptions)</argsstring>
        <name>graph</name>
        <param>
          <type>size_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>xmin</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>xmax</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>ymin</declname>
        </param>
        <param>
          <type>long double</type>
          <declname>ymax</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>T **</type>
          <declname>array</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphoptions" kindref="compound">graphoptions</ref> &amp;</type>
          <declname>aoptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="507" column="5" bodyfile="include/graphs.hpp" bodystart="507" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="graphs_8hpp_1a01dbe23781c1a611f8d763a4b86e60fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int graph</definition>
        <argsstring>(size_t height, size_t width, const long double xmin, const long double xmax, const long double ymin, const long double ymax, const size_t numfunctions, T(*functions[])(T), const graphoptions &amp;aoptions)</argsstring>
        <name>graph</name>
        <param>
          <type>size_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>xmin</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>xmax</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>ymin</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>ymax</declname>
        </param>
        <param>
          <type>const size_t</type>
          <declname>numfunctions</declname>
        </param>
        <param>
          <type>T(*[])(T)</type>
          <declname>functions</declname>
        </param>
        <param>
          <type>const <ref refid="structgraphoptions" kindref="compound">graphoptions</ref> &amp;</type>
          <declname>aoptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="626" column="5" bodyfile="include/graphs.hpp" bodystart="626" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="graphs_8hpp_1aba2da8a69f16ce7852287271183e134c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int graph</definition>
        <argsstring>(size_t height, size_t width, const long double xmin, const long double xmax, const long double ymin, const long double ymax, T afunction(T), const graphoptions &amp;aoptions)</argsstring>
        <name>graph</name>
        <param>
          <type>size_t</type>
          <declname>height</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>width</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>xmin</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>xmax</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>ymin</declname>
        </param>
        <param>
          <type>const long double</type>
          <declname>ymax</declname>
        </param>
        <param>
          <type>T </type>
          <declname>afunction</declname>
          <array>T</array>
        </param>
        <param>
          <type>const <ref refid="structgraphoptions" kindref="compound">graphoptions</ref> &amp;</type>
          <declname>aoptions</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/graphs.hpp" line="728" column="5" bodyfile="include/graphs.hpp" bodystart="728" bodyend="734"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Teal<sp/>Dulcet,<sp/>CS546</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/tdulcet/Tables-and-Graphs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cwchar&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;clocale&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[][11]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//ASCII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;—&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;+&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//Basic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;─&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;│&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;├&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┤&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;└&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┴&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┘&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//Light</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;━&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┃&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┳&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╋&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┫&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┻&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┛&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//Heavy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;═&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;║&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╔&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╦&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╠&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╚&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╩&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╝&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//Double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;╌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╎&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;├&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┤&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;└&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┴&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┘&quot;</highlight><highlight class="normal">},<sp/></highlight><highlight class="comment">//Light<sp/>Dashed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;╍&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┳&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;╋&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┫&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┻&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;┛&quot;</highlight><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//Heavy<sp/>Dashed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;}};//No<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;\e[39m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[30m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[31m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[32m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[33m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[34m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[35m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[36m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[37m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[90m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[91m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[92m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[93m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[94m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[95m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[96m&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;\e[97m&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="graphs_8hpp_1a6a1a2273d67802663aa06d5c6213bbc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a6a1a2273d67802663aa06d5c6213bbc3" kindref="member">dots</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;⠀&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠁&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠂&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠃&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠄&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠅&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠆&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠇&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠈&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠉&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠊&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠋&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠍&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠎&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠑&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠒&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠔&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠕&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠖&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠘&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠙&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠚&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠛&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠜&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠝&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠞&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠟&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠠&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠡&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠢&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠤&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠥&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠦&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠧&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠨&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠩&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠪&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠫&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠭&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠮&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠯&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠰&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠱&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠲&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠳&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠴&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠵&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠶&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠷&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠸&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠹&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠺&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠻&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠽&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠾&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⠿&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡀&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡁&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡂&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡃&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡄&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡅&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡆&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡇&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡈&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡉&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡊&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡋&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡍&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡎&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡑&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡒&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡔&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡕&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡖&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡘&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡙&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡚&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡛&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡜&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡝&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡞&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡟&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡠&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡡&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡢&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡤&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡥&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡦&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡧&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡨&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡩&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡪&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡫&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡭&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡮&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡯&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡰&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡱&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡲&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡳&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡴&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡵&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡶&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡷&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡸&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡹&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡺&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡻&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡽&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡾&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⡿&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢀&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢁&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢂&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢃&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢄&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢅&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢆&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢇&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢈&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢉&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢊&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢋&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢍&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢎&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢑&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢒&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢔&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢕&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢖&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢘&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢙&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢚&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢛&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢜&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢝&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢞&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢟&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢠&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢡&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢢&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢤&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢥&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢦&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢧&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢨&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢩&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢪&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢫&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢭&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢮&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢯&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢰&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢱&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢲&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢳&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢴&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢵&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢶&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢷&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢸&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢹&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢺&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢻&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢽&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢾&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⢿&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣀&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣁&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣂&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣃&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣄&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣅&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣆&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣇&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣈&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣉&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣊&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣋&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣌&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣍&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣎&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣏&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣑&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣒&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣔&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣕&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣖&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣘&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣙&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣚&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣛&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣜&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣝&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣞&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣟&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣠&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣡&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣢&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣣&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣤&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣥&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣦&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣧&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣨&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣩&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣪&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣫&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣬&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣭&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣮&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣯&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣰&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣱&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣲&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣳&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣴&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣵&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣶&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣷&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣸&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣹&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣺&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣻&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣽&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣾&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⣿&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="graphs_8hpp_1a524d16027eb5d4d9052f1634a15a863d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a524d16027eb5d4d9052f1634a15a863d" kindref="member">values</ref>[][4]<sp/>=<sp/>{{0x1,<sp/>0x2,<sp/>0x4,<sp/>0x40},<sp/>{0x8,<sp/>0x10,<sp/>0x20,<sp/>0x80}};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="graphs_8hpp_1a84a54be46d61d60c0e6a76ac79bae486" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a84a54be46d61d60c0e6a76ac79bae486" kindref="member">fractions</ref>[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;¼&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;½&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;¾&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅐&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅑&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅒&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅓&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅔&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅕&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅖&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅗&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅘&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅙&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅚&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅛&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅜&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅝&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;⅞&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="graphs_8hpp_1a9bd47038e7a99a6f487cd7067247bd07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a9bd47038e7a99a6f487cd7067247bd07" kindref="member">fractionvalues</ref>[]<sp/>=<sp/>{1.0L<sp/>/<sp/>4.0L,<sp/>1.0L<sp/>/<sp/>2.0L,<sp/>3.0L<sp/>/<sp/>4.0L,<sp/>1.0L<sp/>/<sp/>7.0L,<sp/>1.0L<sp/>/<sp/>9.0L,<sp/>1.0L<sp/>/<sp/>10.0L,<sp/>1.0L<sp/>/<sp/>3.0L,<sp/>2.0L<sp/>/<sp/>3.0L,<sp/>1.0L<sp/>/<sp/>5.0L,<sp/>2.0L<sp/>/<sp/>5.0L,<sp/>3.0L<sp/>/<sp/>5.0L,<sp/>4.0L<sp/>/<sp/>5.0L,<sp/>1.0L<sp/>/<sp/>6.0L,<sp/>5.0L<sp/>/<sp/>6.0L,<sp/>1.0L<sp/>/<sp/>8.0L,<sp/>3.0L<sp/>/<sp/>8.0L,<sp/>5.0L<sp/>/<sp/>8.0L,<sp/>7.0L<sp/>/<sp/>8.0L};</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structgraphoptions" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structgraphoptions" kindref="compound">graphoptions</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42" refid="structgraphoptions_1a1d9f747f6f5cc058df8022e496b1fa4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions_1a1d9f747f6f5cc058df8022e496b1fa4a" kindref="member">border</ref>;</highlight></codeline>
<codeline lineno="43" refid="structgraphoptions_1a759a20af91d0700136ff4ab6b6f6459a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions_1a759a20af91d0700136ff4ab6b6f6459a" kindref="member">axislabel</ref>;</highlight></codeline>
<codeline lineno="44" refid="structgraphoptions_1a6b640af21b351f274169578753012203" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions_1a6b640af21b351f274169578753012203" kindref="member">axisunitslabel</ref>;</highlight></codeline>
<codeline lineno="45" refid="structgraphoptions_1a89686c844a7ca3a781519ed425683a19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structgraphoptions_1a89686c844a7ca3a781519ed425683a19" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="46" refid="structgraphoptions_1ac00b5ba04b71e70f7789cde248f6ad82" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions_1ac00b5ba04b71e70f7789cde248f6ad82" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="47" refid="structgraphoptions_1aee4262c3417f0d9ff7ed47d58770ee5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions_1aee4262c3417f0d9ff7ed47d58770ee5a" kindref="member">color</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1a142ea0e411fcfd6cfeeeb1c6a8869133" kindref="member">graphoptions</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1af61ad80e401468feeb49505babf1cb3e" kindref="member">~graphoptions</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structgraphoptions_1a142ea0e411fcfd6cfeeeb1c6a8869133" refkind="member"><highlight class="normal"><ref refid="structgraphoptions_1a142ea0e411fcfd6cfeeeb1c6a8869133" kindref="member">graphoptions::graphoptions</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1a1d9f747f6f5cc058df8022e496b1fa4a" kindref="member">border</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1a759a20af91d0700136ff4ab6b6f6459a" kindref="member">axislabel</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1a6b640af21b351f274169578753012203" kindref="member">axisunitslabel</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1ac00b5ba04b71e70f7789cde248f6ad82" kindref="member">style</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1aee4262c3417f0d9ff7ed47d58770ee5a" kindref="member">color</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structgraphoptions_1a89686c844a7ca3a781519ed425683a19" kindref="member">title</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="structgraphoptions_1af61ad80e401468feeb49505babf1cb3e" refkind="member"><highlight class="normal"><ref refid="structgraphoptions_1af61ad80e401468feeb49505babf1cb3e" kindref="member">graphoptions::~graphoptions</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="graphs_8hpp_1a5c1a8e3cedb72ff9591ac596bd334f28" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions" kindref="compound">graphoptions</ref><sp/><ref refid="graphs_8hpp_1a5c1a8e3cedb72ff9591ac596bd334f28" kindref="member">graphdefaultoptions</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>columns<sp/>needed<sp/>to<sp/>represent<sp/>the<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adapted<sp/>from:<sp/>https://stackoverflow.com/a/31124065</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="graphs_8hpp_1a2c4e6a8e51fcb85e7bf2e4aaca3abdf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a2c4e6a8e51fcb85e7bf2e4aaca3abdf8" kindref="member">strcol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>strlen(str);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>length;<sp/>++i)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iscntrl(str[i]))</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nError!<sp/>Control<sp/>character<sp/>in<sp/>string.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Control<sp/>character:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(int)str[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>mbstowcs(NULL,<sp/>str,<sp/>0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)-1)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nError!<sp/>mbstowcs<sp/>failed.<sp/>Invalid<sp/>multibyte<sp/>character.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>++length;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*wcstring<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">[length];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mbstowcs(wcstring,<sp/>str,<sp/>length)<sp/>==<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)-1)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcstring<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>wcstring;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nError!<sp/>mbstowcs<sp/>failed.<sp/>Invalid<sp/>multibyte<sp/>character.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>wcswidth(wcstring,<sp/>length);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nError!<sp/>wcswidth<sp/>failed.<sp/>Nonprintable<sp/>wide<sp/>character.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wcstring<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>wcstring;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Word<sp/>wrap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Source:<sp/>https://gist.github.com/tdulcet/819821ca69501822ad3f84a060c640a0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Adapted<sp/>from:<sp/>https://stackoverflow.com/a/42016346<sp/>and<sp/>https://stackoverflow.com/a/13094734</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="graphs_8hpp_1a7c93086728906d56f07a7320e866e9e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a7c93086728906d56f07a7320e866e9e0" kindref="member">wrap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>line_length)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>words[strlen(str)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(words,<sp/>str);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>wrapped;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>linelen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(words[index]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words[index]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linelen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isspace(words[index]))</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tempindex<sp/>=<sp/>index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>templinelen<sp/>=<sp/>linelen;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!isspace(words[tempindex])<sp/>and<sp/>words[tempindex]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++templinelen;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++tempindex;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>temp[templinelen<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(temp,<sp/>words<sp/>+<sp/>(index<sp/>-<sp/>linelen),<sp/>templinelen);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp[templinelen]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width<sp/>=<sp/><ref refid="graphs_8hpp_1a2c4e6a8e51fcb85e7bf2e4aaca3abdf8" kindref="member">strcol</ref>(temp);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>&gt;=<sp/>line_length)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words[index]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linelen<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words[index]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linelen<sp/>+=<sp/>8<sp/>-<sp/>(linelen<sp/>%<sp/>8);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(words[index]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++linelen;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>wrapped<sp/>=<sp/>words;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wrapped;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>fractions<sp/>and<sp/>constants<sp/>to<sp/>Unicode<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="graphs_8hpp_1a78d4673ef4f8b08c0d58e9128abc0fd3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a78d4673ef4f8b08c0d58e9128abc0fd3" kindref="member">outputlabel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>label,<sp/>ostringstream<sp/>&amp;strm)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>strm.precision(2);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>intpart<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>fractionpart<sp/>=<sp/>abs(modf(label,<sp/>&amp;intpart));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a84a54be46d61d60c0e6a76ac79bae486" kindref="member">fractions</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a84a54be46d61d60c0e6a76ac79bae486" kindref="member">fractions</ref>[0])<sp/>and<sp/>!output;<sp/>++i)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(fractionpart<sp/>-<sp/><ref refid="graphs_8hpp_1a9bd47038e7a99a6f487cd7067247bd07" kindref="member">fractionvalues</ref>[i])<sp/>&lt;<sp/>DBL_EPSILON)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intpart<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/>intpart;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a84a54be46d61d60c0e6a76ac79bae486" kindref="member">fractions</ref>[i];</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(abs(label)<sp/>&gt;=<sp/>DBL_EPSILON)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output<sp/>and<sp/>fmod(label,<sp/>M_PI)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;π&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intpart<sp/>=<sp/>label<sp/>/<sp/>M_PI;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intpart<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intpart<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/>intpart;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/>symbol;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output<sp/>and<sp/>fmod(label,<sp/>M_E)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;e&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intpart<sp/>=<sp/>label<sp/>/<sp/>M_E;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intpart<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(intpart<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/>intpart;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/>symbol;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strm<sp/>&lt;&lt;<sp/>label;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/><ref refid="graphs_8hpp_1a2c4e6a8e51fcb85e7bf2e4aaca3abdf8" kindref="member">strcol</ref>(strm.str().c_str());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Output<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymax,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions" kindref="compound">graphoptions</ref><sp/>&amp;aoptions)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>border<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1a1d9f747f6f5cc058df8022e496b1fa4a" kindref="member">border</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>axislabel<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1a759a20af91d0700136ff4ab6b6f6459a" kindref="member">axislabel</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>axisunitslabel<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1a6b640af21b351f274169578753012203" kindref="member">axisunitslabel</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>title<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1a89686c844a7ca3a781519ed425683a19" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>style<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1ac00b5ba04b71e70f7789cde248f6ad82" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>&gt;=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[0]))</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">winsize<sp/>w;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>ioctl(STDOUT_FILENO,<sp/>TIOCGWINSZ,<sp/>&amp;w);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aheight<sp/>=<sp/>height<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>awidth<sp/>=<sp/>width<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(aheight<sp/>&gt;<sp/>w.ws_row)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;The<sp/>height<sp/>of<sp/>the<sp/>graph<sp/>(&quot;<sp/>&lt;&lt;<sp/>aheight<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>greater<sp/>then<sp/>the<sp/>height<sp/>of<sp/>the<sp/>terminal<sp/>(&quot;<sp/>&lt;&lt;<sp/>w.ws_row<sp/>&lt;&lt;<sp/>&quot;).\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(awidth<sp/>&gt;<sp/>w.ws_col)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;The<sp/>width<sp/>of<sp/>the<sp/>graph<sp/>(&quot;<sp/>&lt;&lt;<sp/>awidth<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>greater<sp/>then<sp/>the<sp/>width<sp/>of<sp/>the<sp/>terminal<sp/>(&quot;<sp/>&lt;&lt;<sp/>w.ws_col<sp/>&lt;&lt;<sp/>&quot;).\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmin<sp/>&gt;=<sp/>xmax)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xmin<sp/>must<sp/>be<sp/>less<sp/>than<sp/>xmax.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ymin<sp/>&gt;=<sp/>ymax)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ymin<sp/>must<sp/>be<sp/>less<sp/>than<sp/>ymax.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xscl<sp/>=<sp/>width<sp/>/<sp/>(xmax<sp/>-<sp/>xmin);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yscl<sp/>=<sp/>height<sp/>/<sp/>(ymax<sp/>-<sp/>ymin);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xaxis<sp/>=<sp/>width<sp/>-<sp/>(xmax<sp/>*<sp/>xscl);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaxis<sp/>=<sp/>ymax<sp/>*<sp/>yscl;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divisor<sp/>=<sp/>2<sp/>*<sp/>4<sp/>*<sp/>((width<sp/>/<sp/>160.0)<sp/>&gt;<sp/>1<sp/>?<sp/>(width<sp/>/<sp/>160)<sp/>+<sp/>1<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>setlocale(LC_CTYPE,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(title<sp/>!=<sp/>NULL<sp/>and<sp/>title[0]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a7c93086728906d56f07a7320e866e9e0" kindref="member">wrap</ref>(title,<sp/>w.ws_col)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>height;<sp/>i<sp/>+=<sp/>4)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ayaxis<sp/>=<sp/>(i<sp/>&lt;=<sp/>yaxis<sp/>and<sp/>(i<sp/>+<sp/>4)<sp/>&gt;<sp/>yaxis);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>yaxislabel<sp/>=<sp/>(i<sp/>&lt;=<sp/>(yaxis<sp/>+<sp/>4)<sp/>and<sp/>(i<sp/>+<sp/>4)<sp/>&gt;<sp/>(yaxis<sp/>+<sp/>4));</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>ylabelstrm;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ylabellength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border<sp/>and<sp/>axislabel<sp/>and<sp/>axisunitslabel)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>label;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adivisor<sp/>=<sp/>divisor;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>yaxis)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adivisor<sp/>=<sp/>-adivisor;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>yaxis<sp/>+<sp/>adivisor;<sp/>((i<sp/>&lt;<sp/>yaxis<sp/>and<sp/>k<sp/>&gt;=<sp/>i)<sp/>or<sp/>(i<sp/>&gt;<sp/>yaxis<sp/>and<sp/>k<sp/>&lt;<sp/>(i<sp/>+<sp/>4)))<sp/>and<sp/>(i<sp/>&gt;=<sp/>4<sp/>or<sp/>!axislabel)<sp/>and<sp/>!output;<sp/>k<sp/>+=<sp/>adivisor)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>k<sp/>and<sp/>(i<sp/>+<sp/>4)<sp/>&gt;<sp/>k)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>ymax<sp/>-<sp/>(k<sp/>/<sp/>yscl);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ylabellength<sp/>=<sp/><ref refid="graphs_8hpp_1a78d4673ef4f8b08c0d58e9128abc0fd3" kindref="member">outputlabel</ref>(label,<sp/>ylabelstrm);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ylabellength<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>width;<sp/>j<sp/>+=<sp/>2)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>axaxis<sp/>=<sp/>(j<sp/>&lt;=<sp/>xaxis<sp/>and<sp/>(j<sp/>+<sp/>2)<sp/>&gt;<sp/>xaxis);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>xaxislabel<sp/>=<sp/>(j<sp/>&lt;=<sp/>(xaxis<sp/>-<sp/>2)<sp/>and<sp/>(j<sp/>+<sp/>2)<sp/>&gt;<sp/>(xaxis<sp/>-<sp/>2));</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(border)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axaxis<sp/>and<sp/>ayaxis)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][6];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axaxis)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axislabel<sp/>and<sp/>axisunitslabel)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adivisor<sp/>=<sp/>divisor;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>yaxis)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adivisor<sp/>=<sp/>-adivisor;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>yaxis<sp/>+<sp/>adivisor;<sp/>((i<sp/>&lt;<sp/>yaxis<sp/>and<sp/>k<sp/>&gt;=<sp/>i)<sp/>or<sp/>(i<sp/>&gt;<sp/>yaxis<sp/>and<sp/>k<sp/>&lt;<sp/>(i<sp/>+<sp/>4)))<sp/>and<sp/>(i<sp/>&gt;=<sp/>4<sp/>or<sp/>!axislabel)<sp/>and<sp/>!output;<sp/>k<sp/>+=<sp/>adivisor)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;=<sp/>k<sp/>and<sp/>(i<sp/>+<sp/>4)<sp/>&gt;<sp/>k)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][7];</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][4];</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>(height<sp/>-<sp/>4))</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][10];</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][1];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ayaxis)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axislabel<sp/>and<sp/>axisunitslabel)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adivisor<sp/>=<sp/>divisor;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>xaxis)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adivisor<sp/>=<sp/>-adivisor;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>xaxis<sp/>+<sp/>adivisor;<sp/>((j<sp/>&lt;<sp/>xaxis<sp/>and<sp/>k<sp/>&gt;=<sp/>j)<sp/>or<sp/>(j<sp/>&gt;<sp/>xaxis<sp/>and<sp/>k<sp/>&lt;<sp/>(j<sp/>+<sp/>2)))<sp/>and<sp/>(j<sp/>&lt;<sp/>(width<sp/>-<sp/>4)<sp/>or<sp/>!axislabel)<sp/>and<sp/>!output;<sp/>k<sp/>+=<sp/>adivisor)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>k<sp/>and<sp/>(j<sp/>+<sp/>2)<sp/>&gt;<sp/>k)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][3];</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][2];</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>(width<sp/>-<sp/>2))</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][4];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a3cbcc834bba715d7897e5dcb0a500d76" kindref="member">styles</ref>[style][0];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yaxislabel<sp/>and<sp/>xaxislabel<sp/>and<sp/>axislabel<sp/>and<sp/>axisunitslabel)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>(width<sp/>-<sp/>2)<sp/>and<sp/>yaxislabel<sp/>and<sp/>axislabel)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(yaxislabel<sp/>and<sp/>axislabel<sp/>and<sp/>axisunitslabel)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>label;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adivisor<sp/>=<sp/>divisor;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>xaxis)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adivisor<sp/>=<sp/>-adivisor;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>xaxis<sp/>+<sp/>adivisor;<sp/>((j<sp/>&lt;<sp/>xaxis<sp/>and<sp/>k<sp/>&gt;=<sp/>j)<sp/>or<sp/>(j<sp/>&gt;<sp/>xaxis<sp/>and<sp/>k<sp/>&lt;<sp/>(j<sp/>+<sp/>2)))<sp/>and<sp/>j<sp/>&lt;<sp/>(width<sp/>-<sp/>2)<sp/>and<sp/>!output;<sp/>k<sp/>+=<sp/>adivisor)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;=<sp/>k<sp/>and<sp/>(j<sp/>+<sp/>2)<sp/>&gt;<sp/>k)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label<sp/>=<sp/>(k<sp/>/<sp/>xscl)<sp/>+<sp/>xmin;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adivisor<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>-=<sp/>2;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(output)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ostringstream<sp/>strm;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/><ref refid="graphs_8hpp_1a78d4673ef4f8b08c0d58e9128abc0fd3" kindref="member">outputlabel</ref>(label,<sp/>strm);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((j<sp/>&gt;=<sp/>xaxis<sp/>or<sp/>(j<sp/>+<sp/>length)<sp/>&lt;<sp/>(xaxis<sp/>-<sp/>4))<sp/>and<sp/>(j<sp/>+<sp/>length)<sp/>&lt;<sp/>(width<sp/>-<sp/>2))</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>strm.str();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>length<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(adivisor<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0<sp/>and<sp/>xaxislabel<sp/>and<sp/>axislabel)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((j<sp/>&lt;=<sp/>(xaxis<sp/>-<sp/>ylabellength)<sp/>and<sp/>(j<sp/>+<sp/>2)<sp/>&gt;<sp/>(xaxis<sp/>-<sp/>ylabellength))<sp/>and<sp/>axislabel<sp/>and<sp/>axisunitslabel)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>ylabelstrm.str();</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ylabellength<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>+=<sp/>ylabellength<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dot<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>color<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>2<sp/>and<sp/>k<sp/>&lt;<sp/>(width<sp/>-<sp/>j);<sp/>++k)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>4<sp/>and<sp/>l<sp/>&lt;<sp/>(height<sp/>-<sp/>i);<sp/>++l)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dot<sp/>+=<sp/>(array[j<sp/>+<sp/>k][i<sp/>+<sp/>l]<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>*<sp/><ref refid="graphs_8hpp_1a524d16027eb5d4d9052f1634a15a863d" kindref="member">values</ref>[k][l];</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[j<sp/>+<sp/>k][i<sp/>+<sp/>l]<sp/>and<sp/>color<sp/>!=<sp/>array[j<sp/>+<sp/>k][i<sp/>+<sp/>l])</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/>=<sp/>array[j<sp/>+<sp/>k][i<sp/>+<sp/>l];</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--color;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref>[color];</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\e[1m&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1a6a1a2273d67802663aa06d5c6213bbc3" kindref="member">dots</ref>[dot]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\e[22m&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref>[0];</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>array<sp/>to<sp/>graph<sp/>and<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="507" refid="graphs_8hpp_1a6cfeb94c998df81de0952aaf62003256" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmax,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymin,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/>T<sp/>**array,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions" kindref="compound">graphoptions</ref><sp/>&amp;aoptions)</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1aee4262c3417f0d9ff7ed47d58770ee5a" kindref="member">color</ref>;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>&gt;=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref>[0]))</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">winsize<sp/>w;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ioctl(STDOUT_FILENO,<sp/>TIOCGWINSZ,<sp/>&amp;w);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>w.ws_row<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>w.ws_col<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aheight<sp/>=<sp/>height<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>awidth<sp/>=<sp/>width<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(aheight<sp/>&gt;<sp/>w.ws_row)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;The<sp/>height<sp/>of<sp/>the<sp/>graph<sp/>(&quot;<sp/>&lt;&lt;<sp/>aheight<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>greater<sp/>then<sp/>the<sp/>height<sp/>of<sp/>the<sp/>terminal<sp/>(&quot;<sp/>&lt;&lt;<sp/>w.ws_row<sp/>&lt;&lt;<sp/>&quot;).\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(awidth<sp/>&gt;<sp/>w.ws_col)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;The<sp/>width<sp/>of<sp/>the<sp/>graph<sp/>(&quot;<sp/>&lt;&lt;<sp/>awidth<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>greater<sp/>then<sp/>the<sp/>width<sp/>of<sp/>the<sp/>terminal<sp/>(&quot;<sp/>&lt;&lt;<sp/>w.ws_col<sp/>&lt;&lt;<sp/>&quot;).\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmin<sp/>==<sp/>0<sp/>and<sp/>xmax<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>numeric_limits&lt;T&gt;::max();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>numeric_limits&lt;T&gt;::min();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i][0]<sp/>&lt;<sp/>xmin)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmin<sp/>=<sp/>array[i][0];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i][0]<sp/>&gt;<sp/>xmax)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmax<sp/>=<sp/>array[i][0];</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ymin<sp/>==<sp/>0<sp/>and<sp/>ymax<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>numeric_limits&lt;T&gt;::max();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>numeric_limits&lt;T&gt;::min();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i][1]<sp/>&lt;<sp/>ymin)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymin<sp/>=<sp/>array[i][1];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i][1]<sp/>&gt;<sp/>ymax)</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ymax<sp/>=<sp/>array[i][1];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmin<sp/>&gt;=<sp/>xmax)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xmin<sp/>must<sp/>be<sp/>less<sp/>than<sp/>xmax.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ymin<sp/>&gt;=<sp/>ymax)</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ymin<sp/>must<sp/>be<sp/>less<sp/>than<sp/>ymax.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xscl<sp/>=<sp/>width<sp/>/<sp/>(xmax<sp/>-<sp/>xmin);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yscl<sp/>=<sp/>height<sp/>/<sp/>(ymax<sp/>-<sp/>ymin);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xaxis<sp/>=<sp/>width<sp/>-<sp/>(xmax<sp/>*<sp/>xscl);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaxis<sp/>=<sp/>ymax<sp/>*<sp/>yscl;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**aarray;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>aarray<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*[width];</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aarray[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">[height];</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>height;<sp/>++j)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aarray[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[i][0]<sp/>&gt;=<sp/>xmin<sp/>and<sp/>array[i][0]<sp/>&lt;<sp/>xmax<sp/>and<sp/>array[i][1]<sp/>&gt;=<sp/>ymin<sp/>and<sp/>array[i][1]<sp/>&lt;<sp/>ymax)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>(array[i][0]<sp/>*<sp/>xscl)<sp/>+<sp/>xaxis;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>(yaxis<sp/>-<sp/>(array[i][1]<sp/>*<sp/>yscl))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aarray[x][y]<sp/>=<sp/>color<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(height,<sp/>width,<sp/>xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax,<sp/>aarray,<sp/>aoptions);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(aarray<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>aarray[i];</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>aarray;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>one<sp/>or<sp/>more<sp/>functions<sp/>to<sp/>graph<sp/>and<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="626" refid="graphs_8hpp_1a01dbe23781c1a611f8d763a4b86e60fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numfunctions,<sp/>T<sp/>(*functions[])(T),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions" kindref="compound">graphoptions</ref><sp/>&amp;aoptions)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color<sp/>=<sp/>aoptions.<ref refid="structgraphoptions_1aee4262c3417f0d9ff7ed47d58770ee5a" kindref="member">color</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(color<sp/>&gt;=<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref>[0]))</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numfunctions<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">winsize<sp/>w;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>ioctl(STDOUT_FILENO,<sp/>TIOCGWINSZ,<sp/>&amp;w);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(height<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>w.ws_row<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(width<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>w.ws_col<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aheight<sp/>=<sp/>height<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>awidth<sp/>=<sp/>width<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(aheight<sp/>&gt;<sp/>w.ws_row)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;The<sp/>height<sp/>of<sp/>the<sp/>graph<sp/>(&quot;<sp/>&lt;&lt;<sp/>aheight<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>greater<sp/>then<sp/>the<sp/>height<sp/>of<sp/>the<sp/>terminal<sp/>(&quot;<sp/>&lt;&lt;<sp/>w.ws_row<sp/>&lt;&lt;<sp/>&quot;).\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>(awidth<sp/>&gt;<sp/>w.ws_col)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cerr<sp/>&lt;&lt;<sp/>&quot;The<sp/>width<sp/>of<sp/>the<sp/>graph<sp/>(&quot;<sp/>&lt;&lt;<sp/>awidth<sp/>&lt;&lt;<sp/>&quot;)<sp/>is<sp/>greater<sp/>then<sp/>the<sp/>width<sp/>of<sp/>the<sp/>terminal<sp/>(&quot;<sp/>&lt;&lt;<sp/>w.ws_col<sp/>&lt;&lt;<sp/>&quot;).\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>return<sp/>1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmin<sp/>&gt;=<sp/>xmax)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;xmin<sp/>must<sp/>be<sp/>less<sp/>than<sp/>xmax.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ymin<sp/>&gt;=<sp/>ymax)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ymin<sp/>must<sp/>be<sp/>less<sp/>than<sp/>ymax.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xscl<sp/>=<sp/>width<sp/>/<sp/>(xmax<sp/>-<sp/>xmin);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yscl<sp/>=<sp/>height<sp/>/<sp/>(ymax<sp/>-<sp/>ymin);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xaxis<sp/>=<sp/>width<sp/>-<sp/>(xmax<sp/>*<sp/>xscl);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yaxis<sp/>=<sp/>ymax<sp/>*<sp/>yscl;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>**array;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>array<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*[width];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[i]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">[height];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>height;<sp/>++j)</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[i][j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numfunctions;<sp/>++j)</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>acolor<sp/>=<sp/>numfunctions<sp/>==<sp/>1<sp/>?<sp/>color<sp/>+<sp/>1<sp/>:<sp/>(j<sp/>%<sp/>((</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ac7e7a5b513e5e27b84df7ae424a1e2fc" kindref="member">colors</ref>[0])<sp/>-<sp/>2))<sp/>+<sp/>3;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>i<sp/>+=<sp/>0.5)</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>x<sp/>=<sp/>(i<sp/>/<sp/>xscl)<sp/>+<sp/>xmin;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>y<sp/>=<sp/>(functions[j])(x);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>xmin<sp/>and<sp/>x<sp/>&lt;<sp/>xmax<sp/>and<sp/>y<sp/>&gt;=<sp/>ymin<sp/>and<sp/>y<sp/>&lt;<sp/>ymax)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ax<sp/>=<sp/>(x<sp/>*<sp/>xscl)<sp/>+<sp/>xaxis;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>ay<sp/>=<sp/>(yaxis<sp/>-<sp/>(y<sp/>*<sp/>yscl))<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[ax][ay])</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array[ax][ay]<sp/>!=<sp/>acolor)</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[ax][ay]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array[ax][ay]<sp/>=<sp/>acolor;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>code<sp/>=<sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(height,<sp/>width,<sp/>xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax,<sp/>array,<sp/>aoptions);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(array<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>width;<sp/>++i)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>array[i];</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>array;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>code;</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convert<sp/>single<sp/>function<sp/>to<sp/>function<sp/>array<sp/>and<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="728" refid="graphs_8hpp_1aba2da8a69f16ce7852287271183e134c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xmax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ymax,<sp/>T<sp/>afunction(T),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structgraphoptions" kindref="compound">graphoptions</ref><sp/>&amp;aoptions)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>T(*functions[])</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>(T)<sp/>=<sp/>{afunction};</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="graphs_8hpp_1ad96f6525c5be962000176e0437a294f8" kindref="member">graph</ref>(height,<sp/>width,<sp/>xmin,<sp/>xmax,<sp/>ymin,<sp/>ymax,<sp/>1,<sp/>functions,<sp/>aoptions);</highlight></codeline>
<codeline lineno="734"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="include/graphs.hpp"/>
  </compounddef>
</doxygen>
