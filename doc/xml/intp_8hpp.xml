<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="intp_8hpp" kind="file" language="C++">
    <compoundname>intp.hpp</compoundname>
    <includes local="no">iterator</includes>
    <includes local="no">utility</includes>
    <includes refid="misc_8hpp" local="yes">misc.hpp</includes>
    <includedby refid="menu_8hpp" local="yes">include/menu.hpp</includedby>
    <incdepgraph>
      <node id="11">
        <label>graphs.hpp</label>
        <link refid="graphs_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/intp.hpp</label>
        <link refid="intp_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>misc.hpp</label>
        <link refid="misc_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>algorithm</label>
      </node>
      <node id="16">
        <label>cfloat</label>
      </node>
      <node id="19">
        <label>clocale</label>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>cstdlib</label>
      </node>
      <node id="13">
        <label>cstring</label>
      </node>
      <node id="18">
        <label>cwchar</label>
      </node>
      <node id="8">
        <label>fstream</label>
      </node>
      <node id="17">
        <label>iomanip</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>iterator</label>
      </node>
      <node id="15">
        <label>limits</label>
      </node>
      <node id="10">
        <label>numeric</label>
      </node>
      <node id="12">
        <label>sstream</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="21">
        <label>sys/ioctl.h</label>
      </node>
      <node id="22">
        <label>unistd.h</label>
      </node>
      <node id="3">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/intp.hpp</label>
        <link refid="intp_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/menu.hpp</label>
        <link refid="menu_8hpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classintp_1_1LinearInterp" prot="public">intp::LinearInterp</innerclass>
    <innerclass refid="classintp_1_1PolyInterp" prot="public">intp::PolyInterp</innerclass>
    <innernamespace refid="namespaceintp">intp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Harith Al-Safi </para>
</simplesect>
<simplesect kind="version"><para>0.1 </para>
</simplesect>
<simplesect kind="date"><para>2021-12-10</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2021 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="misc_8hpp" kindref="compound">misc.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="namespaceintp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceintp" kindref="compound">intp</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="classintp_1_1LinearInterp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classintp_1_1LinearInterp" kindref="compound">LinearInterp</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="28" refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpolated<sp/>only<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>;</highlight></codeline>
<codeline lineno="31" refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>original<sp/>+<sp/>interpolated<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>;</highlight></codeline>
<codeline lineno="34" refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>;</highlight></codeline>
<codeline lineno="35" refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" kindref="member">n</ref>;<sp/></highlight><highlight class="comment">//<sp/>size<sp/>of<sp/>original<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Plot" kindref="compound">misc::Plot</ref><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="classintp_1_1LinearInterp_1a1bfbc01f2d393ea8ece07c281888a00b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a1bfbc01f2d393ea8ece07c281888a00b" kindref="member">_find_value</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xx,<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/>_x,<sp/>std::vector&lt;long<sp/>double&gt;<sp/>_y){</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>converts<sp/>x<sp/>and<sp/>y<sp/>to<sp/>std::pair<sp/>so<sp/>we<sp/>can<sp/>sort<sp/>it<sp/>without<sp/>disrupting<sp/>layout<sp/>of<sp/>points<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;long<sp/>double,<sp/>long<sp/>double&gt;&gt;<sp/>_points;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_x.size();<sp/>i++){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_points.push_back({_x[i],<sp/>_y[i]});</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(_points.begin(),<sp/>_points.end());</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//point<sp/>pair<sp/>is<sp/>&lt;<sp/>xx<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lessThan<sp/>=</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](std::pair&lt;double,<sp/>double&gt;<sp/>point,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xxx)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point.first<sp/>&lt;<sp/>xxx;};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>first<sp/>value<sp/>&gt;=<sp/>xx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lower_bound(_points.cbegin(),<sp/>_points.cend(),<sp/>xx,<sp/>lessThan);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xx<sp/>&gt;<sp/>than<sp/>the<sp/>largest<sp/>val<sp/>in<sp/>the<sp/>x,<sp/>we<sp/>can&apos;t<sp/>interpolate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter<sp/>==<sp/>_points.cend())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_points.cend()<sp/>-<sp/>1)-&gt;second;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//xx<sp/>&lt;<sp/>than<sp/>the<sp/>smallest<sp/>val<sp/>in<sp/>the<sp/>x,<sp/>we<sp/>can&apos;t<sp/>interpolate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter<sp/>==<sp/>_points.cbegin()<sp/>&amp;&amp;<sp/>xx<sp/>&lt;=<sp/>_points.cbegin()-&gt;first)<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_points.cbegin()-&gt;second;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpolating<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperX<sp/>=<sp/>iter-&gt;first;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>upperY<sp/>=<sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerX<sp/>=<sp/>(iter<sp/>-<sp/>1)-&gt;first;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lowerY<sp/>=<sp/>(iter<sp/>-<sp/>1)-&gt;second;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaY<sp/>=<sp/>upperY<sp/>-<sp/>lowerY;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaX<sp/>=<sp/>upperX<sp/>-<sp/>lowerX;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy<sp/><sp/>=<sp/>lowerY<sp/>+<sp/>((xx<sp/>-<sp/>lowerX)/<sp/>deltaX)<sp/>*<sp/>deltaY;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>.push_back(xx);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>.push_back(yy);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>.push_back(xx);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>.push_back(yy);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yy;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95" refid="classintp_1_1LinearInterp_1ab47c88b454ae9e5680d7e25895c0db57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab47c88b454ae9e5680d7e25895c0db57" kindref="member">LinearInterp</ref>(){}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="classintp_1_1LinearInterp_1a16bc0a0f005f2b57af8c3cff45d80b8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a16bc0a0f005f2b57af8c3cff45d80b8f" kindref="member">~LinearInterp</ref>(){}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classintp_1_1LinearInterp_1a1ee7f275fca970ba5ed822689f772ed6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a1ee7f275fca970ba5ed822689f772ed6" kindref="member">load_data</ref>(std::vector&lt;long<sp/>double&gt;<sp/>xx,<sp/>std::vector&lt;long<sp/>double&gt;<sp/>yy){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xx.size()<sp/>!=<sp/>yy.size()){</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;intp::LinearInterp::load_data<sp/>-&gt;<sp/>Size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx.size()<sp/>==<sp/>0<sp/>||<sp/>yy.size()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;intp::LinearInterp::load_data<sp/>-&gt;<sp/>Input<sp/>is<sp/>size<sp/>=<sp/>0&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" kindref="member">n</ref><sp/>=<sp/>xx.size();</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>validty<sp/>of<sp/>points<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EPSILON{1.0E-8};</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::size_t<sp/>i=1;<sp/>i&lt;<sp/><ref refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" kindref="member">n</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaX<sp/>=<sp/>std::abs(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>[i]<sp/>-<sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>[i-1]);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(deltaX<sp/>&lt;<sp/>EPSILON<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>err{</highlight><highlight class="stringliteral">&quot;Potential<sp/>Divide<sp/>By<sp/>Zero:<sp/>Points<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>[i-1])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>And<sp/>&quot;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::to_string(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>[i])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>Are<sp/>Too<sp/>Close<sp/>In<sp/>Value&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::range_error(err);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>.clear();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>.clear();</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="classintp_1_1LinearInterp_1a19a36bb67d8a42be7d15d04648229208" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a19a36bb67d8a42be7d15d04648229208" kindref="member">find_value</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>use_combined<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(use_combined<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a1bfbc01f2d393ea8ece07c281888a00b" kindref="member">_find_value</ref>(xx,<sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a1bfbc01f2d393ea8ece07c281888a00b" kindref="member">_find_value</ref>(xx,<sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="classintp_1_1LinearInterp_1a586931cc4470450bfcf1215f7e3daa2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a586931cc4470450bfcf1215f7e3daa2c" kindref="member">reset_interpolated</ref>(){</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>.clear();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>.clear();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref><sp/>=<sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref><sp/>=<sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="classintp_1_1LinearInterp_1a905b1a16a9718f3c87f47d4f6c87eb93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a905b1a16a9718f3c87f47d4f6c87eb93" kindref="member">plot_all_interpolation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>500){</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>dmn<sp/>=<sp/><ref refid="namespacemisc_1af54e23a4e431270b3e2e589b9d732b7e" kindref="member">misc::generate_vector</ref>(</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>),<sp/><ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>),</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nn);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dmn.size();<sp/>i++){</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a19a36bb67d8a42be7d15d04648229208" kindref="member">find_value</ref>(dmn[i]);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a2e77ad32addfd39d1f81e198ed90b58c" kindref="member">plot_combined_data</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a586931cc4470450bfcf1215f7e3daa2c" kindref="member">reset_interpolated</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="classintp_1_1LinearInterp_1a2ce5eafccbdfd1a92cec39694a5601ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a2ce5eafccbdfd1a92cec39694a5601ee" kindref="member">plot_data</ref>(){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a41c44efde77238011b7ef8d03fe70db9" kindref="member">set_domain</ref>(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>)-2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>-1.0),<sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>)+2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>1.0)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a7d41a0e058bafb1a4243eb032c74556f" kindref="member">set_range</ref>(</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>)-2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>-1.0),<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>)+2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>1.0)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1ac2da558e0965208f9898d64cef0f6b74" kindref="member">set_title</ref>(</highlight><highlight class="stringliteral">&quot;Original<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a7476d78c32c4c21d6330fba416ceae2c" kindref="member">set_color</ref>(misc::Plot::Color::yellow);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a85567735781b6a1cfb277c2c8ae12355" kindref="member">plot_vect</ref>(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classintp_1_1LinearInterp_1af0af99e177d8c2c9bd345546ffe96a85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1af0af99e177d8c2c9bd345546ffe96a85" kindref="member">plot_interpolated_data</ref>(){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>.empty()){</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a41c44efde77238011b7ef8d03fe70db9" kindref="member">set_domain</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>)-2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>-1.0),<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>)+2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>1.0)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a7d41a0e058bafb1a4243eb032c74556f" kindref="member">set_range</ref>(</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>)-2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>-1.0),<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>)+2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>1.0)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1ac2da558e0965208f9898d64cef0f6b74" kindref="member">set_title</ref>(</highlight><highlight class="stringliteral">&quot;Interpolated<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a7476d78c32c4c21d6330fba416ceae2c" kindref="member">set_color</ref>(misc::Plot::Color::green);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a85567735781b6a1cfb277c2c8ae12355" kindref="member">plot_vect</ref>(<ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="classintp_1_1LinearInterp_1a2e77ad32addfd39d1f81e198ed90b58c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a2e77ad32addfd39d1f81e198ed90b58c" kindref="member">plot_combined_data</ref>(){</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a41c44efde77238011b7ef8d03fe70db9" kindref="member">set_domain</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>)-2.0,<sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>-1.0),<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>)+2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>1.0)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a7d41a0e058bafb1a4243eb032c74556f" kindref="member">set_range</ref>(</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::min(<ref refid="classmisc_1_1Table_1a00f26317647c271278462e5e8569e293" kindref="member">misc::Table::get_min</ref>(<ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>)-2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>-1.0),<sp/></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::max(<ref refid="classmisc_1_1Table_1a64096cc9612a8351e8c030d06e3c114e" kindref="member">misc::Table::get_max</ref>(<ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>)+2.0,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>1.0)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1ac2da558e0965208f9898d64cef0f6b74" kindref="member">set_title</ref>(</highlight><highlight class="stringliteral">&quot;Combined<sp/>data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a7476d78c32c4c21d6330fba416ceae2c" kindref="member">set_color</ref>(misc::Plot::Color::blue);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ab5d909f2ba117c11352037451891c43d" kindref="member">p</ref>.<ref refid="classmisc_1_1Plot_1a85567735781b6a1cfb277c2c8ae12355" kindref="member">plot_vect</ref>(<ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="classintp_1_1LinearInterp_1a0c2c830a638153841382d819f4bc1e73" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref><sp/><ref refid="classintp_1_1LinearInterp_1a0c2c830a638153841382d819f4bc1e73" kindref="member">get_original_data</ref>(){</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref><sp/>t;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="classmisc_1_1Table_1af3aa863033df4b4b83469675c5dbb846" kindref="member">add_col</ref>(</highlight><highlight class="stringliteral">&quot;x-data&quot;</highlight><highlight class="normal">,<sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="classmisc_1_1Table_1af3aa863033df4b4b83469675c5dbb846" kindref="member">add_col</ref>(</highlight><highlight class="stringliteral">&quot;y-data&quot;</highlight><highlight class="normal">,<sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="classintp_1_1LinearInterp_1a34f189c555a7c5d8a2900a2f314ddd59" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref><sp/><ref refid="classintp_1_1LinearInterp_1a34f189c555a7c5d8a2900a2f314ddd59" kindref="member">get_interpolated_data</ref>(){</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref><sp/>t;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="classmisc_1_1Table_1af3aa863033df4b4b83469675c5dbb846" kindref="member">add_col</ref>(</highlight><highlight class="stringliteral">&quot;x-data&quot;</highlight><highlight class="normal">,<sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="classmisc_1_1Table_1af3aa863033df4b4b83469675c5dbb846" kindref="member">add_col</ref>(</highlight><highlight class="stringliteral">&quot;y-interpolated-data&quot;</highlight><highlight class="normal">,<sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classintp_1_1LinearInterp_1a312024163ea8f6d9bdc20d37902b9fed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref><sp/><ref refid="classintp_1_1LinearInterp_1a312024163ea8f6d9bdc20d37902b9fed" kindref="member">get_combined_data</ref>(){</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classmisc_1_1Table" kindref="compound">misc::Table</ref><sp/>t;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="classmisc_1_1Table_1af3aa863033df4b4b83469675c5dbb846" kindref="member">add_col</ref>(</highlight><highlight class="stringliteral">&quot;x-data&quot;</highlight><highlight class="normal">,<sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t.<ref refid="classmisc_1_1Table_1af3aa863033df4b4b83469675c5dbb846" kindref="member">add_col</ref>(</highlight><highlight class="stringliteral">&quot;y-data&quot;</highlight><highlight class="normal">,<sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="classintp_1_1LinearInterp_1a33c4b83f8be6b8c68079dde8068fc86f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a33c4b83f8be6b8c68079dde8068fc86f" kindref="member">get_r_original_data</ref>(){</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmisc_1_1Table_1a1efe608906aefaec83b77dd3a76662d2" kindref="member">misc::Table::get_r</ref>(<ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="classintp_1_1LinearInterp_1a5596a0d46568cb0256b4cea36e19d5dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp_1a5596a0d46568cb0256b4cea36e19d5dd" kindref="member">get_r_combined_data</ref>(){</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classmisc_1_1Table_1a1efe608906aefaec83b77dd3a76662d2" kindref="member">misc::Table::get_r</ref>(<ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>,<sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Friend<sp/>so<sp/>the<sp/>class<sp/>can<sp/>access<sp/>private<sp/>attributes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classintp_1_1LinearInterp_1a95a52a22e82f0de918e04105356d6317" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classintp_1_1PolyInterp" kindref="compound">PolyInterp</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="classintp_1_1PolyInterp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classintp_1_1PolyInterp" kindref="compound">PolyInterp</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1LinearInterp" kindref="compound">LinearInterp</ref></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307" refid="classintp_1_1PolyInterp_1af2bbf7080242e2915109db16ec845b87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1PolyInterp_1af2bbf7080242e2915109db16ec845b87" kindref="member">_find_value</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xx,<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;long<sp/>double&gt;<sp/>_x,<sp/>std::vector&lt;long<sp/>double&gt;<sp/>_y){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stores<sp/>the<sp/>data<sp/>in<sp/>std::pair<sp/>so<sp/>its<sp/>easier<sp/>to<sp/>sort<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;long<sp/>double,<sp/>long<sp/>double&gt;&gt;<sp/>_points;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>_x.size();<sp/>i++){</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_points.push_back({_x[i],<sp/>_y[i]});</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::sort(_points.begin(),<sp/>_points.end());</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Define<sp/>a<sp/>lambda<sp/>that<sp/>returns<sp/>true<sp/>if<sp/>the<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//of<sp/>a<sp/>point<sp/>pair<sp/>is<sp/>&lt;<sp/>the<sp/>caller&apos;s<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lessThan<sp/>=</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[](std::pair&lt;double,<sp/>double&gt;<sp/>point,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xxx)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>point.first<sp/>&lt;<sp/>xxx;};</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>first<sp/>table<sp/>entry<sp/>whose<sp/>value<sp/>is<sp/>&gt;=<sp/>caller&apos;s<sp/>x<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>iter<sp/>=</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::lower_bound(_points.cbegin(),<sp/>_points.cend(),<sp/>xx,<sp/>lessThan);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>caller&apos;s<sp/>X<sp/>value<sp/>is<sp/>greater<sp/>than<sp/>the<sp/>largest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//X<sp/>value<sp/>in<sp/>the<sp/>table,<sp/>we<sp/>can&apos;t<sp/>interpolate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter<sp/>==<sp/>_points.cend())<sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(_points.cend()<sp/>-<sp/>1)-&gt;second;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>the<sp/>caller&apos;s<sp/>X<sp/>value<sp/>is<sp/>less<sp/>than<sp/>the<sp/>smallest<sp/>X<sp/>value<sp/>in<sp/>the<sp/>table,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>can&apos;t<sp/>interpolate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(iter<sp/>==<sp/>_points.cbegin()<sp/>&amp;&amp;<sp/>xx<sp/>&lt;=<sp/>_points.cbegin()-&gt;first)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>_points.cbegin()-&gt;second;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Implementing<sp/>Lagrange<sp/>Interpolation<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" kindref="member">n</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" kindref="member">n</ref>;<sp/>j++){</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>j)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m<sp/>*<sp/>(xx<sp/>-<sp/>_points[j].first)<sp/>/<sp/>(_points[i].first<sp/>-<sp/>_points[j].first);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>m<sp/>*<sp/>_points[i].second;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yy<sp/>=<sp/>yy<sp/>+<sp/>m;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref>.push_back(xx);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref>.push_back(yy);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>.push_back(xx);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>.push_back(yy);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>yy;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="361" refid="classintp_1_1PolyInterp_1adaefb559da9f8802130334b6cf5ca88a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1PolyInterp_1adaefb559da9f8802130334b6cf5ca88a" kindref="member">PolyInterp</ref>(){}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="classintp_1_1PolyInterp_1a262c78f8d052291360cdc2cc7d57bf31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1PolyInterp_1a262c78f8d052291360cdc2cc7d57bf31" kindref="member">~PolyInterp</ref>(){}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="classintp_1_1PolyInterp_1af7f4fb4af5ff903947fbcc932490646e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classintp_1_1PolyInterp_1af7f4fb4af5ff903947fbcc932490646e" kindref="member">load_data</ref>(std::vector&lt;long<sp/>double&gt;<sp/>xx,<sp/>std::vector&lt;long<sp/>double&gt;<sp/>yy){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(xx.size()<sp/>!=<sp/>yy.size()){</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::invalid_argument(</highlight><highlight class="stringliteral">&quot;intp::LinearInterp::load_data<sp/>-&gt;<sp/>Size<sp/>mismatch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a61ee1cce36d503c6489e87aa000e45c5" kindref="member">x</ref><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a1b27f11407f80190fbfbc5d9abdc1403" kindref="member">y</ref><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ae8546f0b25e02cdd8464cbd31c88e042" kindref="member">x_comb</ref><sp/>=<sp/>xx;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a26963d5b0be30c57582579a36c472769" kindref="member">y_comb</ref><sp/>=<sp/>yy;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a34d4500170e1150a3ef09ad97a919f39" kindref="member">n</ref><sp/>=<sp/>xx.size();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1a7c88e4e60132c995b00e593fc27445f0" kindref="member">x_in</ref>.clear();</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classintp_1_1LinearInterp_1ac9c017b3cd9b3a51b55af6b64b751619" kindref="member">y_in</ref>.clear();</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>};<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>Int</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/intp.hpp"/>
  </compounddef>
</doxygen>
